// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// ElectionsDao is the data access object for table elections.
type ElectionsDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns ElectionsColumns // columns contains all the column names of Table for convenient usage.
}

// ElectionsColumns defines and stores column names for table elections.
type ElectionsColumns struct {
	Id           string //
	Title        string // 选举标题
	Introduction string //
	Status       string // 状态 0 - 未开始 1 - 进行中 2 - 已结束
	Starttime    string //
	Endtime      string //
}

// electionsColumns holds the columns for table elections.
var electionsColumns = ElectionsColumns{
	Id:           "id",
	Title:        "title",
	Introduction: "introduction",
	Status:       "status",
	Starttime:    "starttime",
	Endtime:      "endtime",
}

// NewElectionsDao creates and returns a new DAO object for table data access.
func NewElectionsDao() *ElectionsDao {
	return &ElectionsDao{
		group:   "default",
		table:   "elections",
		columns: electionsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ElectionsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *ElectionsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *ElectionsDao) Columns() ElectionsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *ElectionsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ElectionsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ElectionsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
